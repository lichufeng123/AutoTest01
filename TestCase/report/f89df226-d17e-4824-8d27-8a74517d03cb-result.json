{"name": "test_add_goods_for_customer_a", "status": "broken", "statusDetails": {"message": "RuntimeError: 客户 customer_a 登录失败：'accessToken'", "trace": "cls = <class 'utils.token_handler.TokenHandler'>, customer_code = 'customer_a'\n\n    @classmethod\n    def get_token(cls, customer_code):\n        if customer_code in cls._token_cache:\n            return cls._token_cache[customer_code]\n    \n        # 连接 SQLite 数据库（你也可以用 mysql-connector）\n        base_dir = os.path.dirname(os.path.dirname(__file__))  # 项目根目录\n        db_path = os.path.join(base_dir, 'db', 'auth.db')\n        conn = sqlite3.connect(db_path)\n        cursor = conn.cursor()\n    \n        cursor.execute(\"SELECT login_url, user_no, password, device_type FROM auth_config WHERE customer_code=?\", (customer_code,))\n        result = cursor.fetchone()\n        conn.close()\n    \n        if not result:\n            raise Exception(f\"找不到客户 {customer_code} 的登录信息\")\n    \n        login_url, user_no, password, device_type = result\n        payload = {\n            \"userNo\": user_no,\n            \"password\": password,\n            \"deviceType\": device_type\n        }\n    \n        try:\n            resp = requests.post(login_url, json=payload)\n            resp.raise_for_status()\n>           token = resp.json()['data']['accessToken']\nE           KeyError: 'accessToken'\n\n..\\utils\\token_handler.py:36: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_add_goods_for_customer_a():\n        url = \"http://114.132.41.62:8174/information/goods/page\"\n        data = {\"data\":{\"moduleId\":\"120003\",\"keyword\":\"\",\"statusList\":[0,1,2]},\"page\":1,\"pageSize\":50,\"moduleId\":\"120003\"}\n>       response = request_with_token(\"customer_a\", \"POST\", url, json=data)\n\ntest_login.py:6: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\utils\\request_tool.py:9: in request_with_token\n    token = TokenHandler.get_token(customer_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'utils.token_handler.TokenHandler'>, customer_code = 'customer_a'\n\n    @classmethod\n    def get_token(cls, customer_code):\n        if customer_code in cls._token_cache:\n            return cls._token_cache[customer_code]\n    \n        # 连接 SQLite 数据库（你也可以用 mysql-connector）\n        base_dir = os.path.dirname(os.path.dirname(__file__))  # 项目根目录\n        db_path = os.path.join(base_dir, 'db', 'auth.db')\n        conn = sqlite3.connect(db_path)\n        cursor = conn.cursor()\n    \n        cursor.execute(\"SELECT login_url, user_no, password, device_type FROM auth_config WHERE customer_code=?\", (customer_code,))\n        result = cursor.fetchone()\n        conn.close()\n    \n        if not result:\n            raise Exception(f\"找不到客户 {customer_code} 的登录信息\")\n    \n        login_url, user_no, password, device_type = result\n        payload = {\n            \"userNo\": user_no,\n            \"password\": password,\n            \"deviceType\": device_type\n        }\n    \n        try:\n            resp = requests.post(login_url, json=payload)\n            resp.raise_for_status()\n            token = resp.json()['data']['accessToken']\n            cls._token_cache[customer_code] = token\n            return token\n        except Exception as e:\n>           raise RuntimeError(f\"客户 {customer_code} 登录失败：{e}\")\nE           RuntimeError: 客户 customer_a 登录失败：'accessToken'\n\n..\\utils\\token_handler.py:40: RuntimeError"}, "start": 1751881053891, "stop": 1751881054273, "uuid": "5ea93168-cac6-48e1-9bf6-df5468092370", "historyId": "369ec9dda0688d05f79e240e2fa0257e", "testCaseId": "369ec9dda0688d05f79e240e2fa0257e", "fullName": "TestCase.test_login#test_add_goods_for_customer_a", "labels": [{"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "Clean"}, {"name": "thread", "value": "25908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_login"}]}